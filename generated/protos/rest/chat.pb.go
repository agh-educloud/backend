// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/rest/chat.proto

package educloud_web

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RestChatMessage struct {
	Sender               *RestUser    `protobuf:"bytes,1,opt,name=sender,proto3" json:"1,omitempty"`
	Message              *RestMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"2,omitempty"`
	Code                 string       `protobuf:"bytes,3,opt,name=code,proto3" json:"3,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RestChatMessage) Reset()         { *m = RestChatMessage{} }
func (m *RestChatMessage) String() string { return proto.CompactTextString(m) }
func (*RestChatMessage) ProtoMessage()    {}
func (*RestChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea76e4be37eeff19, []int{0}
}

func (m *RestChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestChatMessage.Unmarshal(m, b)
}
func (m *RestChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestChatMessage.Marshal(b, m, deterministic)
}
func (m *RestChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestChatMessage.Merge(m, src)
}
func (m *RestChatMessage) XXX_Size() int {
	return xxx_messageInfo_RestChatMessage.Size(m)
}
func (m *RestChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RestChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RestChatMessage proto.InternalMessageInfo

func (m *RestChatMessage) GetSender() *RestUser {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *RestChatMessage) GetMessage() *RestMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *RestChatMessage) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type RestMessage struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"1,omitempty"`
	TimeStamp            string   `protobuf:"bytes,2,opt,name=timeStamp,proto3" json:"2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestMessage) Reset()         { *m = RestMessage{} }
func (m *RestMessage) String() string { return proto.CompactTextString(m) }
func (*RestMessage) ProtoMessage()    {}
func (*RestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea76e4be37eeff19, []int{1}
}

func (m *RestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestMessage.Unmarshal(m, b)
}
func (m *RestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestMessage.Marshal(b, m, deterministic)
}
func (m *RestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestMessage.Merge(m, src)
}
func (m *RestMessage) XXX_Size() int {
	return xxx_messageInfo_RestMessage.Size(m)
}
func (m *RestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RestMessage proto.InternalMessageInfo

func (m *RestMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *RestMessage) GetTimeStamp() string {
	if m != nil {
		return m.TimeStamp
	}
	return ""
}

func init() {
	proto.RegisterType((*RestChatMessage)(nil), "RestChatMessage")
	proto.RegisterType((*RestMessage)(nil), "RestMessage")
}

func init() { proto.RegisterFile("protos/rest/chat.proto", fileDescriptor_ea76e4be37eeff19) }

var fileDescriptor_ea76e4be37eeff19 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x89, 0x4a, 0xcb, 0x4e, 0x8b, 0xca, 0x1c, 0x24, 0x14, 0x0f, 0xb5, 0x07, 0xe9, 0xc5,
	0xb4, 0xd4, 0x7f, 0x60, 0xf1, 0xe8, 0x65, 0x8b, 0x17, 0x6f, 0xe9, 0xe6, 0x61, 0x03, 0x26, 0x1b,
	0x76, 0x26, 0xf5, 0xef, 0x4b, 0xb7, 0x09, 0x51, 0x6f, 0xbb, 0xdf, 0x7c, 0xcc, 0x7b, 0xbb, 0x74,
	0xd7, 0x04, 0xaf, 0x5e, 0x56, 0x01, 0xa2, 0x2b, 0x77, 0xc8, 0x35, 0x8b, 0x60, 0xf6, 0x87, 0xb7,
	0x82, 0x70, 0xe6, 0x8b, 0x86, 0x6e, 0x2c, 0x44, 0xb7, 0x87, 0x5c, 0xdf, 0x20, 0x92, 0x7f, 0x82,
	0x1f, 0x68, 0x24, 0xa8, 0x0b, 0x84, 0x34, 0x99, 0x27, 0xcb, 0xc9, 0xc6, 0x64, 0x27, 0xe3, 0x5d,
	0x10, 0x6c, 0x37, 0xe0, 0x47, 0x1a, 0x57, 0x67, 0x3b, 0xbd, 0x88, 0xce, 0x34, 0x3a, 0xdd, 0x06,
	0xdb, 0x0f, 0x99, 0xe9, 0xca, 0xf9, 0x02, 0xe9, 0xe5, 0x3c, 0x59, 0x1a, 0x1b, 0xcf, 0x8b, 0x57,
	0x9a, 0xfc, 0x72, 0x39, 0xa5, 0xb1, 0xf3, 0xb5, 0xa2, 0xd6, 0x18, 0x67, 0x6c, 0x7f, 0xe5, 0x7b,
	0x32, 0x5a, 0x56, 0xd8, 0x69, 0x5e, 0x35, 0x31, 0xc6, 0xd8, 0x01, 0x6c, 0xb6, 0x43, 0xf1, 0x1d,
	0xc2, 0xb1, 0x74, 0xe0, 0xf5, 0x09, 0x39, 0x94, 0x47, 0x74, 0xcb, 0x85, 0x87, 0xee, 0xb3, 0xdb,
	0xec, 0xdf, 0x43, 0xd7, 0xc9, 0xcb, 0xf5, 0xc7, 0x14, 0x45, 0xeb, 0xbe, 0x7c, 0x5b, 0x3c, 0x7d,
	0x63, 0xbf, 0x1f, 0xc5, 0x4f, 0x79, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x9f, 0x48, 0xc5,
	0x46, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RestChatServiceClient is the client API for RestChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RestChatServiceClient interface {
	ReceiveMessages(ctx context.Context, in *RestUser, opts ...grpc.CallOption) (RestChatService_ReceiveMessagesClient, error)
}

type restChatServiceClient struct {
	cc *grpc.ClientConn
}

func NewRestChatServiceClient(cc *grpc.ClientConn) RestChatServiceClient {
	return &restChatServiceClient{cc}
}

func (c *restChatServiceClient) ReceiveMessages(ctx context.Context, in *RestUser, opts ...grpc.CallOption) (RestChatService_ReceiveMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RestChatService_serviceDesc.Streams[0], "/RestChatService/ReceiveMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &restChatServiceReceiveMessagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RestChatService_ReceiveMessagesClient interface {
	Recv() (*RestChatMessage, error)
	grpc.ClientStream
}

type restChatServiceReceiveMessagesClient struct {
	grpc.ClientStream
}

func (x *restChatServiceReceiveMessagesClient) Recv() (*RestChatMessage, error) {
	m := new(RestChatMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RestChatServiceServer is the server API for RestChatService service.
type RestChatServiceServer interface {
	ReceiveMessages(*RestUser, RestChatService_ReceiveMessagesServer) error
}

// UnimplementedRestChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRestChatServiceServer struct {
}

func (*UnimplementedRestChatServiceServer) ReceiveMessages(req *RestUser, srv RestChatService_ReceiveMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method ReceiveMessages not implemented")
}

func RegisterRestChatServiceServer(s *grpc.Server, srv RestChatServiceServer) {
	s.RegisterService(&_RestChatService_serviceDesc, srv)
}

func _RestChatService_ReceiveMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RestUser)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RestChatServiceServer).ReceiveMessages(m, &restChatServiceReceiveMessagesServer{stream})
}

type RestChatService_ReceiveMessagesServer interface {
	Send(*RestChatMessage) error
	grpc.ServerStream
}

type restChatServiceReceiveMessagesServer struct {
	grpc.ServerStream
}

func (x *restChatServiceReceiveMessagesServer) Send(m *RestChatMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _RestChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RestChatService",
	HandlerType: (*RestChatServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReceiveMessages",
			Handler:       _RestChatService_ReceiveMessages_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/rest/chat.proto",
}
